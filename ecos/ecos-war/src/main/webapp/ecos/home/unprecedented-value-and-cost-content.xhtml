<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition 
	xmlns:aries="http://aries.org/jsf"
	xmlns:ui="http://java.sun.com/jsf/facelets">
				
	<aries:borderPane 
		width="auto"
		height="auto"
		backgroundColor="inherit">
	
		<aries:panel margin="10px">
			<aries:label fontSize="20" value="Automated Generation of Software - Applications and User-Interfaces" />
			<aries:spacer height="8" />

			<aries:label fontSize="16" fontWeight="bold" textColorXX="#{userSkin.headerTextColor}" value="Creation of Unprecedented Value at Predictable Cost" />
			<aries:spacer height="2" />
		</aries:panel>
				
		<aries:formPane 
			width="auto"
			height="auto"
			margin="10px"
			columns="3"
			columnClass="width20pct"
			backgroundColor="inherit">
			
			<aries:panel width="auto" margin="0px" backgroundColor="inherit">
				<aries:bh4 value="Structured approach" />
				<aries:p fontSize="13">
					Unprecedented value in reducing costs results from using 
					our structured and systematic approach.  
				</aries:p>
				<aries:h6 value="No compromise in quality" />
				<aries:p fontSize="13">  
					The quality and thoroughness of the 
					generated implementation far outweighs any efforts 
					that could be done by hand. 
				</aries:p>
				<aries:h6 value="Traditional approach is problematic" />
				<aries:p fontSize="13"> 
					Software projects are traditionally difficult to predict 
					in terms of <i>time</i>, <i>cost</i>, and <i>risk</i>.
					With our approach we effectively make each of these 
					predictable (if not minimal).
				</aries:p>
				
				<aries:h5 value="Identification of costs" />
				<aries:p fontSize="13">
					We identify in this section, major <i>costs</i> and describe how we address each of them.
				</aries:p>
				<aries:p fontSize="13">
					See section: <aries:link fontSize="13" value="Reduced and Bounded Risk" onclick="showSection('reduced-and-bounded-risk-pane')" />
					for the breakdown of <i>risks</i> and how we address each of them. 
				</aries:p>
				
				<aries:bh4 value="Making time predictable" /> 
				<aries:p fontSize="13">
					Due to the thorough level of auto-generation,
					our approach provides nearly the quickest - most effective 
					results	possible in today's industry.
				</aries:p>
				<aries:h6 value="Unprecedented value" />
				<aries:p fontSize="13">   
					For example, one can accomplish more work in a single week 
					(with better quality) than 20 (or more..) solid engineers could 
					effectively do in an entire year - really.  
					Let us show you.
				</aries:p>
			</aries:panel>

			<aries:panel width="auto" marginLeft="10px" backgroundColor="inherit">
				<aries:bh4 value="Making costs predictable" />
				<aries:p fontSize="13">
					We reduce (if not eliminate) several critical types of costs. 
					The end-result is greater overall predictability (as well
					as increased quality and reliability).
				</aries:p>
					
				<aries:spacer height="4" />
				<aries:h5 value="Cost of Programming" />
				<aries:p fontSize="13" marginTop="4px">
					The development cost of	hand-coding is monumental and is very hard to estimate.
					Costs in time and money coupled with the unknown and unpredictable levels in quality 
					of the end-results, make programmers (at best) an extremely costly and risky asset.
				</aries:p>
				<aries:bh5 marginLeft="16px" value="Solution: Generation of Fully Executable Application System" />
				<aries:p fontSize="13">
					It is far more valuable to rely upon a computational approach to 
					systematically auto-generate necessary tests and tests cases.
				</aries:p>
				
				<aries:spacer height="4" />
				<aries:h5 value="Cost of Developing Tests" />
				<aries:p fontSize="13" marginTop="4px">
					The development time for <i>in-house</i> tests is seriously 
					unpredictable - while extremely cricial at the same time.  
				</aries:p>
				<aries:p fontSize="13">
					The prospect of having tests that are either incomplete, 
					inefficient (or even misleading or false) is an enormous and 
					unpredictable risk.
				</aries:p>
				
				<aries:bh5 marginLeft="16px" value="Solution: Generation of Tests and Easily Testable Components" />
				<aries:p fontSize="13">
					It is far more valuable to rely upon a computational approach to 
					systematically auto-generate necessary tests and tests cases.
				</aries:p>
			</aries:panel>

			<aries:panel width="auto" marginLeft="10px" backgroundColor="inherit">
				<aries:bh4 value="Making costs predictable, cont..." />

				<aries:spacer height="4" />
				<aries:h5 value="Cost of Testing and Quality Assurance" />
				<aries:p fontSize="13" marginTop="4px">
					Quality assurance often needs to be repeated
					over and over again for each release (major or minor).
					This is very expensive when humans <i>are needed</i>
					to perform it manually.   
				</aries:p>
				<aries:p fontSize="13">
					Such kind of acceptance testing is unreliable and incomplete at best 
					(especially when repeated over and over by different individuals).
				</aries:p>
				<aries:bh5 marginLeft="16px" value="Solution: Generation of Executable Testing Infrastructure" />
				<aries:p fontSize="13">
					It is far more valuable to rely upon a computational approach to 
					systematically auto-generate necessary tests and tests cases.
				</aries:p>

				<aries:spacer height="4" />
				<aries:h5 value="Cost of Managment" />
				<aries:p fontSize="13" marginTop="4px">
					The human cost of managing programmers and their work is also enormous
					if not overly stressful.  The risk of incomplete management is also very real.
				</aries:p>
				<aries:bh5 marginLeft="16px" value="Solution: Easily Configurable and Repeatable Generation Process" />
				<aries:p fontSize="13">
					The solution is to embrace and rely upon a <i>generation engine</i> that 
					is easy to use and natural to configure - which can be easily repeated 
					over and over again.  This encourages fine-tuning of the generated 
					end-system output.
				</aries:p>
			</aries:panel>
		</aries:formPane>
	</aries:borderPane>
</ui:composition>
