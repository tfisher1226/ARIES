<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition 
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:aries="http://aries.org/jsf"
	template="/templates/work.xhtml">

	<!-- page includes -->
	<ui:define name="pageIncludes">
		<ui:include src="homeContent.xhtml" />
	</ui:define>

	<!-- page header -->
	<ui:define name="pageHeader">
		<ui:include src="pageHeader.xhtml" />
	</ui:define>

	<!-- content -->
	<ui:define name="content">
		<div class="content">

			<div style="height: 80px; margin: 10px 0px; background-color: seaGreen" />

			<aries:spacer height="10" />
			<aries:label fontSize="24" value="Why use us ?" />
		
			<div style="width: auto; margin: 20px 20px; text-align: left; background-color: inherit">

				<aries:text value="Rapid and Thorough Implementation" />

				<aries:p>
				This environment provokes thinking in a practival way in terms of using components in manmy various ways.  
				For example, a data cache is basic to understand but it can be used in a myriad of different types of ways.  
				This tool Nam together with Aries and Ariel allows us to effectively design, construct software applications in a much easier way. 
				
				* Deploying one single App is easy
				* Deploying a complex App is more difficult
					* One or more containers
					* Replicas of containers
					* Date volumes for persistence storage
				* Deploying multiple complex Apps in an organized shared way is a challenge
				
				* Different deployment environments, each with unique requirement and constraints

				</aries:p>
			</div>
		</div>
	</ui:define>

	<!-- page footer -->
	<ui:define name="pageFooter">
		<ui:include src="pageFooter.xhtml" />
	</ui:define>
</ui:composition>
