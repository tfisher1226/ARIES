//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.11 at 12:10:41 PM PDT 
//


package nam.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ModuleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ModuleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="pom"/>
 *     &lt;enumeration value="basic"/>
 *     &lt;enumeration value="component"/>
 *     &lt;enumeration value="element"/>
 *     &lt;enumeration value="model"/>
 *     &lt;enumeration value="data"/>
 *     &lt;enumeration value="persistence"/>
 *     &lt;enumeration value="client"/>
 *     &lt;enumeration value="service"/>
 *     &lt;enumeration value="view"/>
 *     &lt;enumeration value="test"/>
 *     &lt;enumeration value="war"/>
 *     &lt;enumeration value="ear"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ModuleType", namespace = "http://nam/model")
@XmlEnum
public enum ModuleType {

    @XmlEnumValue("pom")
    POM("pom"),
    @XmlEnumValue("basic")
    BASIC("basic"),
    @XmlEnumValue("component")
    COMPONENT("component"),
    @XmlEnumValue("element")
    ELEMENT("element"),
    @XmlEnumValue("model")
    MODEL("model"),
    @XmlEnumValue("data")
    DATA("data"),
    @XmlEnumValue("persistence")
    PERSISTENCE("persistence"),
    @XmlEnumValue("client")
    CLIENT("client"),
    @XmlEnumValue("service")
    SERVICE("service"),
    @XmlEnumValue("view")
    VIEW("view"),
    @XmlEnumValue("test")
    TEST("test"),
    @XmlEnumValue("war")
    WAR("war"),
    @XmlEnumValue("ear")
    EAR("ear");
    private final String value;

    ModuleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ModuleType fromValue(String v) {
        for (ModuleType c: ModuleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
