//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.11 at 12:10:41 PM PDT 
//


package nam.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Interaction.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Interaction">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="accept"/>
 *     &lt;enumeration value="call"/>
 *     &lt;enumeration value="listen"/>
 *     &lt;enumeration value="invoke"/>
 *     &lt;enumeration value="post"/>
 *     &lt;enumeration value="publish"/>
 *     &lt;enumeration value="receive"/>
 *     &lt;enumeration value="reply"/>
 *     &lt;enumeration value="send"/>
 *     &lt;enumeration value="subscribe"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Interaction", namespace = "http://nam/model")
@XmlEnum
public enum Interaction {

    @XmlEnumValue("accept")
    ACCEPT("accept"),
    @XmlEnumValue("call")
    CALL("call"),
    @XmlEnumValue("listen")
    LISTEN("listen"),
    @XmlEnumValue("invoke")
    INVOKE("invoke"),
    @XmlEnumValue("post")
    POST("post"),
    @XmlEnumValue("publish")
    PUBLISH("publish"),
    @XmlEnumValue("receive")
    RECEIVE("receive"),
    @XmlEnumValue("reply")
    REPLY("reply"),
    @XmlEnumValue("send")
    SEND("send"),
    @XmlEnumValue("subscribe")
    SUBSCRIBE("subscribe");
    private final String value;

    Interaction(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Interaction fromValue(String v) {
        for (Interaction c: Interaction.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
