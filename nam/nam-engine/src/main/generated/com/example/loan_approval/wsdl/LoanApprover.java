
/*
 * 
 */

package com.example.loan_approval.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.3
 * 2012-05-01T01:27:49.724-07:00
 * Generated source version: 2.3.3
 * 
 */


@WebServiceClient(name = "loanApprover", 
                  wsdlLocation = "file:/C:/workspace/ARIES/nam-engine/source/test/resources/LoanApproval/LoanApproval.wsdl",
                  targetNamespace = "http://example.com/loan-approval/wsdl") 
public class LoanApprover extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://example.com/loan-approval/wsdl", "loanApprover");
    public final static QName LoanApproverPort = new QName("http://example.com/loan-approval/wsdl", "loanApprover_Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/workspace/ARIES/nam-engine/source/test/resources/LoanApproval/LoanApproval.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/workspace/ARIES/nam-engine/source/test/resources/LoanApproval/LoanApproval.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public LoanApprover(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LoanApprover(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LoanApprover() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns LoanApprovalPT
     */
    @WebEndpoint(name = "loanApprover_Port")
    public LoanApprovalPT getLoanApproverPort() {
        return super.getPort(LoanApproverPort, LoanApprovalPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LoanApprovalPT
     */
    @WebEndpoint(name = "loanApprover_Port")
    public LoanApprovalPT getLoanApproverPort(WebServiceFeature... features) {
        return super.getPort(LoanApproverPort, LoanApprovalPT.class, features);
    }

}
