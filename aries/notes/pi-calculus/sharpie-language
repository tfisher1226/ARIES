The main features of the Sharpie language extension are: an asynchronous call-construct, futures, join-patterns, and a notion of behavioral contracts. Asynchronous calls return future values, which are used in join-patterns to synchronize calls. Behavioral contracts are the most innovative aspect of Sharpie. Contracts allow programmers to specify stateful high-level protocols on class interfaces. Contracts can prescribe legal invocation sequences on the methods of a class as well as the externally observable behavior of methods upon call. The Sharpie compiler contains a tool which checks conformance between a client of a class and its contract as well as conformance of the implementation of a class with its contract, using a combination of type inference and model checking.


