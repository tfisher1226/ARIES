We specialize in helping you to develop efficient, transactional, and recoverable cloud-based distributed processing systems.

tukta73@hotmail.com
nangnooy@hotmail.com


I was going to try and answer your question that you had a year or 2 ago.  I remember you had asked (I think), for a potential client, what direct value would this system bring to them, and how would I describe this in two or three sentences or so.  Here is an attempt to answer that:

Nothing fancy or special but instead just a simple and straight-forward and efficient integration of essential standards and technologies for the design and construction of transactional distributed processing systems.  

We demonstrate a set of methodologies that lend themselves to being automated and producing auto-generated results which allow for a great reduction in development and maintenance costs while at the same time providing results which are repeatable, predictable, testable, and manageable.


Subsystems such as management and monitoring are also autogenerated.

We seek to represent the model in the most simple and straight-forward but thorough and all-compassing way.

We systematically address the different stages of each, the design lifecycle, development lifecycle and deployment lifecycle.

These methods of integration/implementation are 

characteristics of  

 which are reliable and recoverable, versatile in handling potential large spikes in volumne/load.


, and testable.



This Committee Specification defines an application-independent entity catalog that maps external identifiers and URI references to (other) URI references. It also defines a format for catalog entry files in terms of [XML] and [XML Namespaces].

The principal task of a catalog processor is to find entries in the catalog that match the input provided and return the associated URI reference as the output. The first such match is always used, and there is no requirement for the catalog processor to search for additional matches.

This catalog is used by an application's entity manager. This Committee Specification does not dictate when an entity manager should access this catalog; for example, an application may attempt other mapping algorithms before or after accessing this catalog.

The catalog is effectively an ordered list of (one or more) catalog entry files. It is up to the application to determine the ordered list of catalog entry files to be used as the logical catalog. (This Committee Specification uses the term "catalog entry file" to refer to one component of a logical catalog even though a catalog entry file can be any kind of storage object or entity including but not limited to a table in a database, some object identified by a URI reference, or some dynamically generated set of catalog entries.)

Each entry in the catalog associates a URI reference with information about an external reference that appears in an XML document. For example, the following are possible catalog entries that associate a URI reference with a public identifier:

<public publicId="ISO 8879:1986//ENTITIES Added Latin 1//EN"
        uri="iso-lat1.gml"/>
<public publicId="-//USA/AAP//DTD BK-1//EN"
        uri="aapbook.dtd"/>
<public publicId="-//Example, Inc.//DTD Report//EN"
        uri="http://www.example.com/dtds/report.dtd"/>

This Committee Specification defines the following catalog entry types: catalog, delegatePublic, delegateSystem, delegateURI, group, nextCatalog, public, rewriteSystem, rewriteURI, system, and systemSuffix, uri, and uriSuffix. In order to be conformant with this Committee Specification, an application must implement all of these entry types with the semantics described herein.

The namespace name defined by this Committee Specification is "urn:oasis:names:tc:entity:xmlns:xml:catalog". The public identifier for XML Catalogs is "-//OASIS//DTD XML Catalogs V1.1//EN".

This Committee Specification reserves all elements and attributes from its namespace for current and future use. In addition, unqualified attributes on elements in its namespace, other than the attributes explicitly described in this Committee Specification, are reserved for future use.

To provide for possible future extension and other applications of this catalog, its format allows for "other information" indicated by elements and attributes from namespaces other than the one defined by this Committee Specification.
