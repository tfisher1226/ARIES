package org.aries.bank;

import java.io.Serializable;
import java.lang.Long;
import java.lang.String;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * Generated by Nam.
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BankLoanQuoteResponse", propOrder = {
	"id",
	"bankName",
	"interestRate",
	"loanQuote",
	"resultCode"
})
@XmlRootElement(name = "bankLoanQuoteResponse")
public class BankLoanQuoteResponse implements Serializable {

	public static final long serialVersionUID = 1;

	@XmlAttribute(name = "id")
	private Long id;

	@XmlAttribute(name = "bank-name")
	private String bankName;

	@XmlAttribute(name = "interest-rate")
	private Double interestRate;

	@XmlAttribute(name = "loan-quote")
	private String loanQuote;

	@XmlAttribute(name = "result-code")
	private Integer resultCode;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getBankName() {
		return bankName;
	}

	public void setBankName(String bankName) {
		this.bankName = bankName;
	}

	public Double getInterestRate() {
		return interestRate;
	}

	public void setInterestRate(Double interestRate) {
		this.interestRate = interestRate;
	}

	public String getLoanQuote() {
		return loanQuote;
	}

	public void setLoanQuote(String loanQuote) {
		this.loanQuote = loanQuote;
	}

	public Integer getResultCode() {
		return resultCode;
	}

	public void setResultCode(Integer resultCode) {
		this.resultCode = resultCode;
	}

	public boolean equals(Object object) {
		if (object == null)
			return false;
		if (!object.getClass().isAssignableFrom(this.getClass()))
			return false;
		BankLoanQuoteResponse other = (BankLoanQuoteResponse) object;
		if (this.getId() == null || other.getId() == null)
			return this == other;
		if (this.getId().equals(other.getId()))
				return false;
		return true;
	}

	public int hashCode() {
		if (getId() != null)
			return getId().hashCode();
		return 0;
	}

}