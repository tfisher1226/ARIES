package org.sgiusa.model.entity;

import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.ForeignKey;
import org.sgiusa.model.entity.GohonzonInfoEntity;

/**
 * Generated by Nam.
 *
 */
@Entity(name = "MembershipInfo")
@Table(name = "membership_info")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class MembershipInfoEntity {

	@Id
	@GeneratedValue
	@Column(name = "id")
	private Long id;

	@Column(name = "friend_of_sgi")
	private Boolean friendOfSgi;

	@Column(name = "received_certificate")
	private Boolean receivedCertificate;

	@Column(name = "not_activated")
	private Boolean notActivated;

	@Column(name = "not_locatable")
	private Boolean notLocatable;

	@Column(name = "last_update")
	@Temporal(TemporalType.TIMESTAMP)
	private Date lastUpdate;

	@JoinColumn(name = "id")
	@OneToMany(cascade = CascadeType.ALL, targetEntity = GohonzonInfoEntity.class)
	@ForeignKey(name = "membership_info_entity_gohonzons_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<GohonzonInfoEntity> gohonzons;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Boolean getFriendOfSgi() {
		return friendOfSgi;
	}

	public void setFriendOfSgi(Boolean friendOfSgi) {
		this.friendOfSgi = friendOfSgi;
	}

	public Boolean getReceivedCertificate() {
		return receivedCertificate;
	}

	public void setReceivedCertificate(Boolean receivedCertificate) {
		this.receivedCertificate = receivedCertificate;
	}

	public Boolean getNotActivated() {
		return notActivated;
	}

	public void setNotActivated(Boolean notActivated) {
		this.notActivated = notActivated;
	}

	public Boolean getNotLocatable() {
		return notLocatable;
	}

	public void setNotLocatable(Boolean notLocatable) {
		this.notLocatable = notLocatable;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	public List<GohonzonInfoEntity> getGohonzons() {
		return gohonzons;
	}

	public void setGohonzons(List<GohonzonInfoEntity> gohonzons) {
		this.gohonzons = gohonzons;
	}

}