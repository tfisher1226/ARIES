package org.sgiusa.model.entity;

import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.ForeignKey;
import org.sgiusa.model.ActivityGroup;
import org.sgiusa.model.Division;
import org.sgiusa.model.SubDivision;
import org.sgiusa.model.entity.OrganizationEntity;
import org.sgiusa.model.entity.UserEntity;

/**
 * Generated by Nam.
 *
 */
@Entity(name = "EmailList")
@Table(name = "email_list")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class EmailListEntity {

	@Id
	@GeneratedValue
	@Column(name = "id")
	private Long id;

	@Column(name = "enabled")
	private Boolean enabled;

	@Column(name = "divisions")
	@Enumerated(EnumType.STRING)
	@ElementCollection(targetClass = Division.class)
	@CollectionTable(name = "email_list_division")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<Division> divisions;

	@Column(name = "sub_divisions")
	@Enumerated(EnumType.STRING)
	@ElementCollection(targetClass = SubDivision.class)
	@CollectionTable(name = "email_list_sub_division")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<SubDivision> subDivisions;

	@Column(name = "activity_groups")
	@Enumerated(EnumType.STRING)
	@ElementCollection(targetClass = ActivityGroup.class)
	@CollectionTable(name = "email_list_activity_group")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<ActivityGroup> activityGroups;

	@JoinColumn(name = "organization", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "email_list_entity_organization_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private OrganizationEntity organization;

	@JoinColumn(name = "id")
	@OneToMany(cascade = CascadeType.ALL, targetEntity = UserEntity.class)
	@ForeignKey(name = "email_list_entity_email_address_list_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<UserEntity> emailAddressList;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Boolean getEnabled() {
		return enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	public List<Division> getDivisions() {
		return divisions;
	}

	public void setDivisions(List<Division> divisions) {
		this.divisions = divisions;
	}

	public List<SubDivision> getSubDivisions() {
		return subDivisions;
	}

	public void setSubDivisions(List<SubDivision> subDivisions) {
		this.subDivisions = subDivisions;
	}

	public List<ActivityGroup> getActivityGroups() {
		return activityGroups;
	}

	public void setActivityGroups(List<ActivityGroup> activityGroups) {
		this.activityGroups = activityGroups;
	}

	public OrganizationEntity getOrganization() {
		return organization;
	}

	public void setOrganization(OrganizationEntity organization) {
		this.organization = organization;
	}

	public List<UserEntity> getEmailAddressList() {
		return emailAddressList;
	}

	public void setEmailAddressList(List<UserEntity> emailAddressList) {
		this.emailAddressList = emailAddressList;
	}

}