package org.sgiusa.model.entity;

import java.lang.String;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import org.aries.common.entity.EmailAccountEntity;
import org.aries.common.entity.EmailAddressEntity;
import org.aries.common.entity.PhoneNumberEntity;
import org.aries.common.entity.StreetAddressEntity;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.ForeignKey;
import org.sgiusa.model.entity.UserPermissionEntity;

/**
 * Generated by Nam.
 *
 */
@Entity(name = "User")
@Table(name = "user")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class UserEntity {

	@Id
	@GeneratedValue
	@Column(name = "id")
	private Long id;

	@Column(name = "user_id")
	private String userId;

	@Column(name = "password")
	private String password;

	@Column(name = "enabled")
	private Boolean enabled;

	@Column(name = "first_name")
	private String firstName;

	@Column(name = "last_name")
	private String lastName;

	@JoinColumn(name = "email_account", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "user_entity_email_account_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private EmailAccountEntity emailAccount;

	@JoinColumn(name = "email_address", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "user_entity_email_address_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private EmailAddressEntity emailAddress;

	@JoinColumn(name = "street_address", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "user_entity_street_address_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private StreetAddressEntity streetAddress;

	@JoinColumn(name = "cell_phone", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "user_entity_cell_phone_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private PhoneNumberEntity cellPhone;

	@JoinColumn(name = "home_phone", referencedColumnName = "id")
	@OneToOne(cascade = CascadeType.ALL)
	@ForeignKey(name = "user_entity_home_phone_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private PhoneNumberEntity homePhone;

	@JoinColumn(name = "id")
	@OneToMany(cascade = CascadeType.ALL, targetEntity = UserPermissionEntity.class)
	@ForeignKey(name = "user_entity_user_permissions_fk")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	private List<UserPermissionEntity> userPermissions;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Boolean getEnabled() {
		return enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public EmailAccountEntity getEmailAccount() {
		return emailAccount;
	}

	public void setEmailAccount(EmailAccountEntity emailAccount) {
		this.emailAccount = emailAccount;
	}

	public EmailAddressEntity getEmailAddress() {
		return emailAddress;
	}

	public void setEmailAddress(EmailAddressEntity emailAddress) {
		this.emailAddress = emailAddress;
	}

	public StreetAddressEntity getStreetAddress() {
		return streetAddress;
	}

	public void setStreetAddress(StreetAddressEntity streetAddress) {
		this.streetAddress = streetAddress;
	}

	public PhoneNumberEntity getCellPhone() {
		return cellPhone;
	}

	public void setCellPhone(PhoneNumberEntity cellPhone) {
		this.cellPhone = cellPhone;
	}

	public PhoneNumberEntity getHomePhone() {
		return homePhone;
	}

	public void setHomePhone(PhoneNumberEntity homePhone) {
		this.homePhone = homePhone;
	}

	public List<UserPermissionEntity> getUserPermissions() {
		return userPermissions;
	}

	public void setUserPermissions(List<UserPermissionEntity> userPermissions) {
		this.userPermissions = userPermissions;
	}

}