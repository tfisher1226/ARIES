package org.sgiusa.model.entity;

import java.lang.String;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.sgiusa.model.StudyDeptExamLevel;
import org.sgiusa.model.StudyDeptLanguage;

/**
 * Generated by Nam.
 *
 */
@Entity(name = "StudyDeptExam")
@Table(name = "study_dept_exam")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class StudyDeptExamEntity {

	@Id
	@GeneratedValue
	@Column(name = "id")
	private Long id;

	@Column(name = "current")
	private Boolean current;

	@Column(name = "exam_level")
	private StudyDeptExamLevel examLevel;

	@Column(name = "exam_language")
	private StudyDeptLanguage examLanguage;

	@Column(name = "exam_location")
	private String examLocation;

	@Column(name = "exam_date")
	@Temporal(TemporalType.TIMESTAMP)
	private Date examDate;

	@Column(name = "last_update")
	@Temporal(TemporalType.TIMESTAMP)
	private Date lastUpdate;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Boolean getCurrent() {
		return current;
	}

	public void setCurrent(Boolean current) {
		this.current = current;
	}

	public StudyDeptExamLevel getExamLevel() {
		return examLevel;
	}

	public void setExamLevel(StudyDeptExamLevel examLevel) {
		this.examLevel = examLevel;
	}

	public StudyDeptLanguage getExamLanguage() {
		return examLanguage;
	}

	public void setExamLanguage(StudyDeptLanguage examLanguage) {
		this.examLanguage = examLanguage;
	}

	public String getExamLocation() {
		return examLocation;
	}

	public void setExamLocation(String examLocation) {
		this.examLocation = examLocation;
	}

	public Date getExamDate() {
		return examDate;
	}

	public void setExamDate(Date examDate) {
		this.examDate = examDate;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

}